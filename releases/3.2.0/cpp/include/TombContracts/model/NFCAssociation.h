/**
 * TheOpenMusicBox API
 * Complete API contract definitions for TheOpenMusicBox - A Raspberry Pi-based music player system.  All API responses follow the UnifiedResponseService format with standardized envelopes. This specification is the source of truth for all client implementations (Web, Flutter, C++). 
 *
 * The version of the OpenAPI document: 3.2.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.14.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * NFCAssociation.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_NFCAssociation_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_NFCAssociation_H_


#include "TombContracts/ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {



class TOMB_API NFCAssociation
    : public ModelBase
{
public:
    NFCAssociation();
    virtual ~NFCAssociation();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;


    /////////////////////////////////////////////
    /// NFCAssociation members


    utility::string_t getTagId() const;
    bool tagIdIsSet() const;
    void unsetTag_id();
    void setTagId(const utility::string_t& value);

    utility::string_t getPlaylistId() const;
    bool playlistIdIsSet() const;
    void unsetPlaylist_id();
    void setPlaylistId(const utility::string_t& value);

    utility::string_t getPlaylistTitle() const;
    bool playlistTitleIsSet() const;
    void unsetPlaylist_title();
    void setPlaylistTitle(const utility::string_t& value);

    utility::datetime getCreatedAt() const;
    bool createdAtIsSet() const;
    void unsetCreated_at();
    void setCreatedAt(const utility::datetime& value);


protected:
    utility::string_t m_Tag_id;
    bool m_Tag_idIsSet;

    utility::string_t m_Playlist_id;
    bool m_Playlist_idIsSet;

    utility::string_t m_Playlist_title;
    bool m_Playlist_titleIsSet;

    utility::datetime m_Created_at;
    bool m_Created_atIsSet;

};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_NFCAssociation_H_ */
