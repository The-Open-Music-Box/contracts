/**
 * TheOpenMusicBox API
 * Complete API contract definitions for TheOpenMusicBox - A Raspberry Pi-based music player system.  All API responses follow the UnifiedResponseService format with standardized envelopes. This specification is the source of truth for all client implementations (Web, Flutter, C++). 
 *
 * The version of the OpenAPI document: 3.2.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.14.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * Track.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_Track_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_Track_H_


#include "TombContracts/ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {



class TOMB_API Track
    : public ModelBase
{
public:
    Track();
    virtual ~Track();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;


    /////////////////////////////////////////////
    /// Track members


    /// <summary>
    /// Unique track identifier in format: {playlist_id}_{track_number}
    /// </summary>
    utility::string_t getId() const;
    bool idIsSet() const;
    void unsetId();
    void setId(const utility::string_t& value);

    /// <summary>
    /// Track number in playlist
    /// </summary>
    int32_t getNumber() const;
    bool numberIsSet() const;
    void unsetnumber();
    void setNumber(int32_t value);

    utility::string_t getTitle() const;
    bool titleIsSet() const;
    void unsetTitle();
    void setTitle(const utility::string_t& value);

    utility::string_t getFilename() const;
    bool filenameIsSet() const;
    void unsetFilename();
    void setFilename(const utility::string_t& value);

    utility::string_t getFilePath() const;
    bool filePathIsSet() const;
    void unsetFile_path();
    void setFilePath(const utility::string_t& value);

    /// <summary>
    /// DEPRECATED: Use duration_ms instead for millisecond precision. Duration in seconds. Will be removed in v4.0.0. 
    /// </summary>
    int32_t getDuration() const;
    bool durationIsSet() const;
    void unsetDuration();
    void setDuration(int32_t value);

    /// <summary>
    /// Duration in milliseconds (preferred over duration)
    /// </summary>
    int32_t getDurationMs() const;
    bool durationMsIsSet() const;
    void unsetDuration_ms();
    void setDurationMs(int32_t value);

    utility::string_t getArtist() const;
    bool artistIsSet() const;
    void unsetArtist();
    void setArtist(const utility::string_t& value);

    utility::string_t getAlbum() const;
    bool albumIsSet() const;
    void unsetAlbum();
    void setAlbum(const utility::string_t& value);

    int32_t getFileSize() const;
    bool fileSizeIsSet() const;
    void unsetFile_size();
    void setFileSize(int32_t value);

    utility::datetime getCreatedAt() const;
    bool createdAtIsSet() const;
    void unsetCreated_at();
    void setCreatedAt(const utility::datetime& value);

    utility::datetime getUpdatedAt() const;
    bool updatedAtIsSet() const;
    void unsetUpdated_at();
    void setUpdatedAt(const utility::datetime& value);


protected:
    utility::string_t m_Id;
    bool m_IdIsSet;

    int32_t m_number;
    bool m_numberIsSet;

    utility::string_t m_Title;
    bool m_TitleIsSet;

    utility::string_t m_Filename;
    bool m_FilenameIsSet;

    utility::string_t m_File_path;
    bool m_File_pathIsSet;

    int32_t m_Duration;
    bool m_DurationIsSet;

    int32_t m_Duration_ms;
    bool m_Duration_msIsSet;

    utility::string_t m_Artist;
    bool m_ArtistIsSet;

    utility::string_t m_Album;
    bool m_AlbumIsSet;

    int32_t m_File_size;
    bool m_File_sizeIsSet;

    utility::datetime m_Created_at;
    bool m_Created_atIsSet;

    utility::datetime m_Updated_at;
    bool m_Updated_atIsSet;

};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_Track_H_ */
