/**
 * TheOpenMusicBox API
 * Complete API contract definitions for TheOpenMusicBox - A Raspberry Pi-based music player system.  All API responses follow the UnifiedResponseService format with standardized envelopes. This specification is the source of truth for all client implementations (Web, Flutter, C++). 
 *
 * The version of the OpenAPI document: 3.1.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.14.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * YouTubeSearchResult.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_YouTubeSearchResult_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_YouTubeSearchResult_H_


#include "TombContracts/ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {



class TOMB_API YouTubeSearchResult
    : public ModelBase
{
public:
    YouTubeSearchResult();
    virtual ~YouTubeSearchResult();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;


    /////////////////////////////////////////////
    /// YouTubeSearchResult members


    utility::string_t getVideoId() const;
    bool videoIdIsSet() const;
    void unsetVideo_id();
    void setVideoId(const utility::string_t& value);

    utility::string_t getTitle() const;
    bool titleIsSet() const;
    void unsetTitle();
    void setTitle(const utility::string_t& value);

    /// <summary>
    /// Duration in seconds
    /// </summary>
    int32_t getDuration() const;
    bool durationIsSet() const;
    void unsetDuration();
    void setDuration(int32_t value);

    utility::string_t getThumbnail() const;
    bool thumbnailIsSet() const;
    void unsetThumbnail();
    void setThumbnail(const utility::string_t& value);

    utility::string_t getChannel() const;
    bool channelIsSet() const;
    void unsetChannel();
    void setChannel(const utility::string_t& value);


protected:
    utility::string_t m_Video_id;
    bool m_Video_idIsSet;

    utility::string_t m_Title;
    bool m_TitleIsSet;

    int32_t m_Duration;
    bool m_DurationIsSet;

    utility::string_t m_Thumbnail;
    bool m_ThumbnailIsSet;

    utility::string_t m_Channel;
    bool m_ChannelIsSet;

};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_YouTubeSearchResult_H_ */
