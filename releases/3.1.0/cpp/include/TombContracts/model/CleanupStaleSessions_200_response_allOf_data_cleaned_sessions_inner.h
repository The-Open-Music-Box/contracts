/**
 * TheOpenMusicBox API
 * Complete API contract definitions for TheOpenMusicBox - A Raspberry Pi-based music player system.  All API responses follow the UnifiedResponseService format with standardized envelopes. This specification is the source of truth for all client implementations (Web, Flutter, C++). 
 *
 * The version of the OpenAPI document: 3.1.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.14.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * CleanupStaleSessions_200_response_allOf_data_cleaned_sessions_inner.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_CleanupStaleSessions_200_response_allOf_data_cleaned_sessions_inner_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_CleanupStaleSessions_200_response_allOf_data_cleaned_sessions_inner_H_


#include "TombContracts/ModelBase.h"

#include <cpprest/details/basic_types.h>

namespace org {
namespace openapitools {
namespace client {
namespace model {



class TOMB_API CleanupStaleSessions_200_response_allOf_data_cleaned_sessions_inner
    : public ModelBase
{
public:
    CleanupStaleSessions_200_response_allOf_data_cleaned_sessions_inner();
    virtual ~CleanupStaleSessions_200_response_allOf_data_cleaned_sessions_inner();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;


    /////////////////////////////////////////////
    /// CleanupStaleSessions_200_response_allOf_data_cleaned_sessions_inner members


    utility::string_t getSessionId() const;
    bool sessionIdIsSet() const;
    void unsetSession_id();
    void setSessionId(const utility::string_t& value);

    utility::string_t getFilename() const;
    bool filenameIsSet() const;
    void unsetFilename();
    void setFilename(const utility::string_t& value);

    double getAgeHours() const;
    bool ageHoursIsSet() const;
    void unsetAge_hours();
    void setAgeHours(double value);


protected:
    utility::string_t m_Session_id;
    bool m_Session_idIsSet;

    utility::string_t m_Filename;
    bool m_FilenameIsSet;

    double m_Age_hours;
    bool m_Age_hoursIsSet;

};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_CleanupStaleSessions_200_response_allOf_data_cleaned_sessions_inner_H_ */
