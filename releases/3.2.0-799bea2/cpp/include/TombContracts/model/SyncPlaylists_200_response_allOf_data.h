/**
 * TheOpenMusicBox API
 * Complete API contract definitions for TheOpenMusicBox - A Raspberry Pi-based music player system.  All API responses follow the UnifiedResponseService format with standardized envelopes. This specification is the source of truth for all client implementations (Web, Flutter, C++). 
 *
 * The version of the OpenAPI document: 3.2.0
 *
 * NOTE: This class is auto generated by OpenAPI-Generator 7.14.0.
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

/*
 * SyncPlaylists_200_response_allOf_data.h
 *
 * 
 */

#ifndef ORG_OPENAPITOOLS_CLIENT_MODEL_SyncPlaylists_200_response_allOf_data_H_
#define ORG_OPENAPITOOLS_CLIENT_MODEL_SyncPlaylists_200_response_allOf_data_H_


#include "TombContracts/ModelBase.h"

#include "TombContracts/model/PlaylistDetailed.h"
#include <vector>

namespace org {
namespace openapitools {
namespace client {
namespace model {

class PlaylistDetailed;


class TOMB_API SyncPlaylists_200_response_allOf_data
    : public ModelBase
{
public:
    SyncPlaylists_200_response_allOf_data();
    virtual ~SyncPlaylists_200_response_allOf_data();

    /////////////////////////////////////////////
    /// ModelBase overrides

    void validate() override;

    web::json::value toJson() const override;
    bool fromJson(const web::json::value& json) override;

    void toMultipart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) const override;
    bool fromMultiPart(std::shared_ptr<MultipartFormData> multipart, const utility::string_t& namePrefix) override;


    /////////////////////////////////////////////
    /// SyncPlaylists_200_response_allOf_data members


    std::vector<std::shared_ptr<PlaylistDetailed>> getPlaylists() const;
    bool playlistsIsSet() const;
    void unsetPlaylists();
    void setPlaylists(const std::vector<std::shared_ptr<PlaylistDetailed>>& value);

    double getServerSeq() const;
    bool serverSeqIsSet() const;
    void unsetServer_seq();
    void setServerSeq(double value);


protected:
    std::vector<std::shared_ptr<PlaylistDetailed>> m_Playlists;
    bool m_PlaylistsIsSet;

    double m_Server_seq;
    bool m_Server_seqIsSet;

};


}
}
}
}

#endif /* ORG_OPENAPITOOLS_CLIENT_MODEL_SyncPlaylists_200_response_allOf_data_H_ */
